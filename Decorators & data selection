#Noisy data affects model precision, and also increases the likelihood that candidates will be spurious.

#Defining a threshold is a subjective exercise. We want to minimize the error, but we also want a reasonable number of candidates for follow-up analyses. We will use a minimum parallax of 2.5 (400 parsecs) and a maximum parallax error of 0.2.

#These thresholds can be changed below.

MIN_PARALLAX = 2.5
MAX_PARALLAX_ERROR = 0.2

#We will also add a couple decorator columns that are useful in visualizations: the "distance" to the star in parsecs, and the absolute magnitude ("abs_mag_ne") of the star, based on the G magnitude from Gaia DR2. Interstellar extinction is neglected in the absolute magnitude estimate.

def transform_init(data_frame):    
    parallax = data_frame['parallax']
    parallax_error = data_frame['parallax_error']
    new_frame = data_frame[(parallax >= MIN_PARALLAX) & (parallax_error <= MAX_PARALLAX_ERROR)].copy()
    new_frame.reset_index(inplace=True, drop=True)
    distance = 1000.0 / new_frame['parallax']
    new_frame['distance'] = distance
    new_frame['abs_mag_ne'] = new_frame['phot_g_mean_mag'] - 5 * (np.log10(distance) - 1)
    return new_frame

#Per the methodology previously outlined, we will use this first transform function to alter our work_data frame.

work_data = transform_init(work_data)
len(work_data)
